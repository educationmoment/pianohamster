name: Release builds (tagged)


on:
push:
tags:
- 'v*' # e.g., v0.1.0


jobs:
build:
name: Build (${{ matrix.os }})
runs-on: ${{ matrix.os }}
strategy:
fail-fast: false
matrix:
include:
- os: ubuntu-latest
target: x86_64-unknown-linux-gnu
artifact_name: pianohamster-linux-x64
archive_ext: tar.gz
- os: macos-latest
target: x86_64-apple-darwin
artifact_name: pianohamster-macos-x64
archive_ext: tar.gz
- os: windows-latest
target: x86_64-pc-windows-msvc
artifact_name: pianohamster-windows-x64
archive_ext: zip


steps:
- name: Checkout
uses: actions/checkout@v4


- name: Install Rust
uses: dtolnay/rust-toolchain@stable
with:
targets: ${{ matrix.target }}


- name: Cache cargo
uses: swatinem/rust-cache@v2
with:
key: ${{ matrix.target }}


- name: Build (release)
run: |
cargo build --release --target ${{ matrix.target }}


- name: Prepare package
shell: bash
run: |
mkdir -p dist
BIN_NAME=pianohamster
case "${{ matrix.os }}" in
windows-latest)
SRC="target/${{ matrix.target }}/release/${BIN_NAME}.exe"
PKG_DIR="${{ matrix.artifact_name }}"
mkdir -p "$PKG_DIR"
cp "$SRC" "$PKG_DIR/"
[ -f README.md ] && cp README.md "$PKG_DIR/" || true
[ -f LICENSE ] && cp LICENSE "$PKG_DIR/" || true
7z a -tzip "dist/${{ matrix.artifact_name }}.zip" "$PKG_DIR/*"
;;
*)
SRC="target/${{ matrix.target }}/release/${BIN_NAME}"
PKG_DIR="${{ matrix.artifact_name }}"
mkdir -p "$PKG_DIR"
cp "$SRC" "$PKG_DIR/"
chmod +x "$PKG_DIR/${BIN_NAME}"
[ -f README.md ] && cp README.md "$PKG_DIR/" || true
[ -f LICENSE ] && cp LICENSE "$PKG_DIR/" || true
tar -czf "dist/${{ matrix.artifact_name }}.tar.gz" "$PKG_DIR"
;;
esac


- name: Upload artifact
uses: actions/upload-artifact@v4
with:
name: ${{ matrix.artifact_name }}
path: dist/*


release:
name: Create GitHub Release
runs-on: ubuntu-latest
needs: build
steps:
- name: Download all artifacts
uses: actions/download-artifact@v4
with:
path: ./artifacts


- name: Generate checksums
run: |
cd artifacts
sha256sum */* > SHA256SUMS.txt


- name: Create Release
uses: softprops/action-gh-release@v2
with:
files: |
artifacts/*/*
artifacts/SHA256SUMS.txt
env:
GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
